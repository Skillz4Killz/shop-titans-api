type Query {
	info: String!
	blueprints: [Blueprint!]!
	champions: [Champion!]!
	heroes: [Hero!]!
	workers: [Worker!]!
}

type Blueprint {
	name: String!
	type: String!
	unlockPrerequisite: String!
	researchScrolls: String!
	tier: Int!
	value: Int!
	craftTime: BlueprintTime
	# netValue: 3.33,
	merchantXP: Int!
	workerXP: Int!
	workers: [BlueprintWorker!]!
	iron: Int!
	wood: Int!
	leather: Int!
	herbs: Int!
	steel: Int!
	ironwood: Int!
	fabric: Int!
	oil: Int!
	components: [BlueprintComponent!]!
	attack: Int!
	defense: Int!
	hp: Int!
	crafting: [BlueprintCrafting!]!
	ascension: [BlueprintCrafting!]!
	energy: BlueprintEnergy
}

type BlueprintEnergy {
	discount: Int!
	surcharge: Int!
	suggest: Int!
	speedUp: Int!
}

type BlueprintTime {
	seconds: Int!
	formatted: String!
}

type BlueprintWorker {
	name: String!
	level: Int!
}

type BlueprintComponent {
	name: String!
	quality: String!
	amount: Int!
}

type BlueprintCrafting {
	reward: String!
	amount: Int!
}

type Champion {
	name: String!
	title: String!
	prerequisite: String!
	stats: [HeroStat!]!
	skill: ChampionSkill
	criticalHit: HeroCritical
	unlockCost: ChampionCost
	threatRating: Int!,
	ranks: [ChampionRank!]!
},

type ChampionSkill {
	name: String!
	effect: String!
}

type ChampionCost {
	coins: Int!
}

type ChampionReward {
	health: Int!
	attack: Int!
	defense: Int!
	skill: ChampionSkill
}

type ChampionRank {
	rank: Int!
	coins: Int!
	reward: ChampionReward
	title: String!
	story: [ChampionStory!]!
}

type ChampionStory {
	name: String!
	text: String!
}

type Hero {
	class: String!
	subclass: String!
	prerequisite: String!
	stats: HeroStat
	criticalHit: HeroCritical
	cost: HeroCost
	threatRating: Int!
	equipments: [HeroEquipment!]!
	element: String!
	skillUnlockLevels: [Int!]!
}

type HeroStat {
	attack: Int!
	health: Int!
	defense: Int!
	evasion: String!
}

type HeroCritical {
	chance: String!
	damage: String!
}

type HeroCost {
	gold: Int!
	gems: Int!
}

type HeroEquipment {
	slot: Int!
	allowed: [String!]!
}

type Worker {
	name: String!
  level_required: String!
  gold_cost: String!
  gem_cost: String!
  title: String!
	blueprint_unlocks: [String!]!
	levels: [WorkerLevel!]!
}

type WorkerLevel {
	level: Int!
	time: String!
	seconds: Int!
	cost: String!
	effect: String!
	investments: WorkerInvestments
}

type WorkerInvestments {
	gold: String!
	gems: Int
}
